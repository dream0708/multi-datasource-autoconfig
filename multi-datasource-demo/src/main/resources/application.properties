spring.application.name = demo
server.Port = 8888

#master
#是否需要配置AtomikosDataSource 默认false
datasource.master.xa: true
#实例化完是否需要调用init方法 DruidDataSource.init 默认false
datasource.master.init: true
#配置transactionManager实例 默认不配置
datasource.master.transactionManager: transactionManager
datasource.master.driverClassName: net.sourceforge.jtds.jdbc.Driver
datasource.master.url: jdbc:jtds:sqlserver://127.0.0.1/master;sendStringParametersAsUnicode=false
datasource.master.username: sa
datasource.master.password: 123456
#master数据源 Mybatis配置 basePackages不配置 就不配置master
datasource.master.mybatis.basePackages[0]:com.github.datasource.demo.**.dao
datasource.master.mybatis.mapper-locations[0]: classpath*:com/github/datasource/**/mapper/*.xml
datasource.master.mybatis.type-aliases-package=com.github

#slave 数据源
datasource.slave.driverClassName: net.sourceforge.jtds.jdbc.Driver
datasource.slave.url: jdbc:jtds:sqlserver://127.0.0.1/slave;sendStringParametersAsUnicode=false
datasource.slave.username: sa
datasource.slave.password: 123456
datasource.slave.mybatis.basePackages[0]:com.github.datasource.demo.slave.**.dao
datasource.slave.mybatis.mapper-locations[0]: classpath*:com/github/datasource/**/mapper/*.xml
datasource.slave.mybatis.type-aliases-package=com.github
#动态数据源 配置
ds.dynamic.mybatis.basePackages[0]:com.github.datasource.demo.dynamic.**.dao
ds.dynamic.mybatis.mapper-locations[0]: classpath*:com/github/datasource/**/mapper/*.xml
ds.dynamic.mybatis.type-aliases-package=com.github

#数据源默认配置
spring.druid.datasource.initialSize: 5
spring.druid.datasource.maxActive: 10
spring.druid.datasource.minIdle: 3
spring.druid.datasource.maxWait: 600000
spring.druid.datasource.removeAbandoned: true
spring.druid.datasource.removeAbandonedTimeout: 1800
spring.druid.datasource.timeBetweenEvictionRunsMillis: 600000
spring.druid.datasource.minEvictableIdleTimeMillis: 300000
spring.druid.datasource.testWhileIdle: true
spring.druid.datasource.testOnBorrow: false
spring.druid.datasource.testOnReturn: false
spring.druid.datasource.poolPreparedStatements: true
spring.druid.datasource.maxPoolPreparedStatementPerConnectionSize: 50
spring.druid.datasource.filters: stat